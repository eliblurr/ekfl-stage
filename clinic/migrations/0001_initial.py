# Generated by Django 3.2.3 on 2021-09-10 06:26

import clinic.utils
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='date')),
                ('start_time', models.TimeField(verbose_name='start_time')),
                ('end_time', models.TimeField(verbose_name='end_time')),
                ('status', models.CharField(choices=[('booked', 'booked'), ('confirmed', 'confirmed'), ('cancelled', 'cancelled'), ('rescheduled', 'rescheduled'), ('available', 'available'), ('honoured', 'honoured'), ('pending', 'pending')], max_length=15)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('amount', models.FloatField(verbose_name='amount')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('partialyment', 'Partpayment'), ('cancelled', 'Cancelled'), ('paid', 'Paid'), ('waived', 'Waived')], max_length=15, verbose_name='status')),
            ],
        ),
        migrations.CreateModel(
            name='ChartExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('oculomotor_balance', models.CharField(max_length=50)),
                ('amsler', models.CharField(max_length=50)),
                ('color_vision', models.CharField(max_length=50)),
                ('right_ant', models.CharField(blank=True, max_length=12, null=True)),
                ('right_post', models.CharField(blank=True, max_length=50, null=True)),
                ('right_cpu_disc', models.CharField(blank=True, max_length=50, null=True)),
                ('left_ant', models.CharField(blank=True, max_length=12, null=True)),
                ('left_post', models.CharField(blank=True, max_length=50, null=True)),
                ('left_cpu_disc', models.CharField(blank=True, max_length=50, null=True)),
                ('clinical_advice_remarks', models.TextField(verbose_name='clinical_advice_remarks')),
                ('recall', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChartEyePressure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('right_iops', models.CharField(blank=True, max_length=6, null=True)),
                ('right_fields', models.CharField(blank=True, max_length=6, null=True)),
                ('left_iops', models.CharField(blank=True, max_length=6, null=True)),
                ('left_fields', models.CharField(blank=True, max_length=6, null=True)),
                ('time', models.DateTimeField()),
                ('drug_concentraion', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('symptoms_and_history', models.TextField(blank=True, null=True, verbose_name='symptoms_and_history')),
            ],
        ),
        migrations.CreateModel(
            name='ChartRefraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('rx_type', models.CharField(choices=[('current_spec1', 'current_spec1'), ('current_spec2', 'current_spec2'), ('objective1', 'Objective 1'), ('objective2', 'Objective 2'), ('subjective', 'subjective'), ('final', 'final')], default='current_spec1', max_length=25)),
                ('right_sph', models.CharField(blank=True, max_length=6, null=True)),
                ('right_cyl', models.CharField(blank=True, max_length=6, null=True)),
                ('right_axis', models.CharField(blank=True, max_length=6, null=True)),
                ('right_prism', models.CharField(blank=True, max_length=6, null=True)),
                ('right_va', models.CharField(blank=True, max_length=6, null=True)),
                ('left_sph', models.CharField(blank=True, max_length=6, null=True)),
                ('left_cyl', models.CharField(blank=True, max_length=6, null=True)),
                ('left_axis', models.CharField(blank=True, max_length=6, null=True)),
                ('left_prism', models.CharField(blank=True, max_length=6, null=True)),
                ('left_va', models.CharField(blank=True, max_length=6, null=True)),
                ('bin_va', models.CharField(blank=True, max_length=6, null=True)),
                ('add', models.CharField(blank=True, max_length=6, null=True)),
                ('pd', models.CharField(blank=True, max_length=6, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Clinician',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('doctor', 'doctor'), ('screener', 'screener')], max_length=10, verbose_name='category')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=59)),
                ('other_name', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('other', 'other')], max_length=7)),
                ('dob', models.DateField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('cellphone_1', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('cellphone_2', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('ghana_post', models.CharField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('tr_no', models.CharField(default=clinic.utils.gen_tr_no, max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=256)),
                ('other_names', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(max_length=255)),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('other', 'other')], max_length=7)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('location', models.CharField(blank=True, max_length=60, null=True)),
                ('ghana_post', models.CharField(blank=True, max_length=50, null=True)),
                ('last_eye_test', models.DateField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('cellphone_1', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('cellphone_2', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('is_registered', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('registered', 'registered'), ('screened', 'screened'), ('examined', 'examined')], default='registered', max_length=25)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('date', models.DateField(verbose_name='date')),
                ('start_time', models.TimeField(verbose_name='start_time')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='clinic.clinician', verbose_name='')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='refractions', to='clinic.patient')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.AddConstraint(
            model_name='patient',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('cellphone_1__isnull', False), ('cellphone_2__isnull', False), ('email__isnull', True)), models.Q(('cellphone_1__isnull', True), ('cellphone_2__isnull', False), ('email__isnull', False)), models.Q(('cellphone_1__isnull', False), ('cellphone_2__isnull', True), ('email__isnull', False)), models.Q(('cellphone_1__isnull', True), ('cellphone_2__isnull', True), ('email__isnull', False)), models.Q(('cellphone_1__isnull', False), ('cellphone_2__isnull', True), ('email__isnull', True)), models.Q(('cellphone_1__isnull', True), ('cellphone_2__isnull', False), ('email__isnull', True)), models.Q(('cellphone_1__isnull', False), ('cellphone_2__isnull', False), ('email__isnull', False)), _connector='OR'), name='check_either_email_cellphone_1_cellphone_2'),
        ),
        migrations.AddField(
            model_name='chartrefraction',
            name='clinician',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='refractions', to='clinic.clinician'),
        ),
        migrations.AddField(
            model_name='chartrefraction',
            name='visit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='chart_refraction', to='clinic.visit', verbose_name=''),
        ),
        migrations.AddField(
            model_name='charteyepressure',
            name='clinician',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='chart_eyepressure', to='clinic.clinician'),
        ),
        migrations.AddField(
            model_name='charteyepressure',
            name='visit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='chart_eye_pressure', to='clinic.visit', verbose_name=''),
        ),
        migrations.AddField(
            model_name='chartexamination',
            name='visit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='chart_examinations', to='clinic.visit', verbose_name=''),
        ),
        migrations.AddField(
            model_name='bill',
            name='visit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bill', to='clinic.visit', verbose_name=''),
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='appointements', to='clinic.clinician', verbose_name='Clinician'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='appointments', to='clinic.patient', verbose_name='Patient'),
        ),
    ]
